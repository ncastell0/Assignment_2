geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot3
# 5. Plot Sepal.Width against Sepal.Length, color by species
plot2 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(mapping = aes(color = Species, shape = Species)) +
geom_smooth(method = "lm", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot2
plot3 <- setosa_data |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(color = "cyan4") +
geom_smooth(method = "lm", color= "darkslategray3" se = FALSE) +
# 5. Plot Sepal.Width against Sepal.Length, color by species
plot2 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(mapping = aes(color = Species, shape = Species)) +
geom_smooth(method = "lm", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot2
plot3 <- setosa_data |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(color = "cyan4") +
geom_smooth(method = "lm", color = "darkslategray3", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot3
# Answer to question 5: The plot matches the correlations computed for setosa flowers. For this category, specifically, it is possible to visualize a positive linear relationship between sepal width and length.
# 5. Plot Sepal.Width against Sepal.Length, color by species
plot2 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(mapping = aes(color = Species, shape = Species)) +
geom_smooth(method = "lm", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot2
plot3 <- setosa_data |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(color = "cyan4") +
geom_smooth(method = "lm", color = "brown2", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot3
# Answer to question 5: The plot matches the correlations computed for setosa flowers. For this category, specifically, it is possible to visualize a positive linear relationship between sepal width and length.
library(viridis)
p + scale_color_viridis(discrete = TRUE)
install.packages("viridis")
install.packages("viridis")
library("viridis")
correlations |>
ggcorrplot() +
scale_color_viridis(option = "D") +
theme_minimal()
library(tidyverse)
library(ggcorrplot)
library(ggplot2)
library(car)
library(mlbench)
library(patchwork)
library(knitr)
library("viridis")
# 1. Correlations
correlations <- iris |>
select(where(is.numeric)) |>
cor(use = "complete.obs")
# Answer to question 1: The correlation between petal width and petal length is very strong and positive, close to 1. This makes sense to me, since petals tend to develop in a rounder shape and, the bigger they are, the greater both length and width tend to be. Sepal length shows a strong, positive correlation with both petal length and petal width. This indicates that larger flowers have longer sepals. However, sepal length and sepal width are negatively and weakly correlated. This could mean that, although larger flowers tend to have have longer sepals, they might in some cases not be as wide. The small magnitude of the effect, however, indicates that the relationship is not stable and there may be a large variance in the data. Finally, sepal width is negatively and moderately correlated with both petal length and petal width. The larger the petals are, the narrower their sepal. Although I don't know much about iris flowers' structure, the observed relationships between variables seem to make sense to me.
correlations |>
ggcorrplot() +
scale_color_viridis(option = "D") +
theme_minimal()
correlations |>
ggcorrplot() +
scale_color_viridis(option = "D") +
correlations |>
ggcorrplot() +
scale_color_viridis(option = "D") +
ggcorrplot
correlations |>
ggcorrplot() +
scale_color_viridis(option = "D")
ggcorrplot
plot1 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_viridis(option = "D") +
theme_minimal() +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot1
plot1 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(aes(color = Sepal.Width)) +
geom_smooth(method = "lm", se = FALSE) +
scale_color_viridis(option = "D") +
theme_minimal() +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot1
plot1 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(aes(color = Sepal.Width)) +
geom_smooth(method = "lm", se = FALSE, aes(color = Sepal.Width)) +
scale_color_viridis(option = "D") +
theme_minimal() +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot1
plot1 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(aes(color = Sepal.Width)) +
geom_smooth(method = "lm", se = FALSE, aes(group = 1)) +
scale_color_viridis(option = "D") +
theme_minimal() +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot1
plot1 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(), col = usecol(pal_unikn) +
# 2. Plot Sepal.Width against Sepal.Length
my_pair <- seecol(pal_unikn_pair, n = 10)
install.packages('unikn')
library(viridis)
library(unikn)
# 2. Plot Sepal.Width against Sepal.Length
my_pair <- seecol(pal_unikn_pair, n = 10)
# 2. Plot Sepal.Width against Sepal.Length
my_pal <- seecol(pal_unikn_light)
plot1 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(size=2, shape=23) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot1
plot1 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(shape = 18, color = "blue") +
geom_smooth(method = "lm", color = "darkred" se = FALSE) +
plot1 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(shape = 18, color = "blue") +
geom_smooth(method = "lm", color = "darkred", se = FALSE) +
theme_minimal() +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot1
View(plot1)
View(plot1)
View(plot1)
# 2. Plot Sepal.Width against Sepal.Length
###my_pal <- seecol(pal_unikn_light)
plot1 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(shape = 18, color = "blue") +
geom_smooth(method = "lm", color = "darkred", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot1
# Answer to question 2: Since the correlation was very weak, we should expect the data to be widely scattered around the regression line. In this sense, the plotted points match the correlations we computed. However, it is also hard to visualize a linear negative relationship between sepal width and length. This indicates that, besides being weak, the effect is also unstable and unreliable, and doesn't apply to individual observations. Despite the overall negative correlation, the relationship between sepal width and length changes a lot for the different data points.
png("plot1", width = 1800, height = 1800, res = 600)
("plot1.png", width = 1800, height = 1800, res = 600)
png("plot1.png", width = 1800, height = 1800, res = 600)
plot1 |> png("plot1.png", width = 1800, height = 1800, res = 600)
ggsave(plot1, file = "plot1.png", dpi = 700)
plot2 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(mapping = aes(color = Species, shape = Species)) +
geom_smooth(method = "lm", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length") +
theme_minimal()
library(tidyverse)
library(ggcorrplot)
library(ggplot2)
library(car)
library(mlbench)
library(patchwork)
library(knitr)
library(viridis)
library(unikn)
# 2. Plot Sepal.Width against Sepal.Length
###my_pal <- seecol(pal_unikn_light)
plot1 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(shape = 18, color = "blue") +
geom_smooth(method = "lm", color = "darkred", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot1
# Answer to question 2: Since the correlation was very weak, we should expect the data to be widely scattered around the regression line. In this sense, the plotted points match the correlations we computed. However, it is also hard to visualize a linear negative relationship between sepal width and length. This indicates that, besides being weak, the effect is also unstable and unreliable, and doesn't apply to individual observations. Despite the overall negative correlation, the relationship between sepal width and length changes a lot for the different data points.
# 5. Plot Sepal.Width against Sepal.Length, color by species
plot2 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(mapping = aes(color = Species, shape = Species)) +
geom_smooth(method = "lm", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length") +
theme_minimal()
plot2
plot3 <- setosa_data |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(color = "cyan4") +
geom_smooth(method = "lm", color = "brown2", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length")
# 4. Setosa correlations
setosa_data <- subset(iris, Species == "setosa")
correlations_setosa <- setosa_data |>
select(where(is.numeric)) |>
cor(use="complete.obs")
# Answer to question 4: All correlations between numeric variables, using only the setosas, are positive. When it comes to sepal length and width, these correlations are rather strong. It indicates that, for this species, longer sepals tend to be wider, which makes sense.
correlations_setosa |>
ggcorrplot()
# 5. Plot Sepal.Width against Sepal.Length, color by species
plot2 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(mapping = aes(color = Species, shape = Species)) +
geom_smooth(method = "lm", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length") +
theme_minimal()
plot2
plot3 <- setosa_data |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(color = "cyan4") +
geom_smooth(method = "lm", color = "brown2", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot3
# Answer to question 5: The plot matches the correlations computed for setosa flowers. For this category, specifically, it is possible to visualize a positive linear relationship between sepal width and length.
plot3 <- setosa_data |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(color = "cyan4") +
geom_smooth(method = "lm", color = "brown2", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length") +
theme_minimal()
plot3
plot2
# 5. Plot Sepal.Width against Sepal.Length, color by species
plot2 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(mapping = aes(color = Species, shape = Species)) +
geom_smooth(method = "lm", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length") +
theme_minimal()
plot2
plot3 <- setosa_data |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(color = "cyan4") +
geom_smooth(method = "lm", color = "brown2", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length") +
theme_minimal()
plot3
# Answer to question 5: The plot matches the correlations computed for setosa flowers. For this category, specifically, it is possible to visualize a positive linear relationship between sepal width and length.
plot2 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(mapping = aes(color = Species, shape = Species)) +
labs(
x = "Sepal Width",
y = "Sepal Length") +
theme_minimal()
plot2
# 5. Plot Sepal.Width against Sepal.Length, color by species
plot2 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(mapping = aes(color = Species, shape = Species)) +
labs(
x = "Sepal Width",
y = "Sepal Length") +
theme_minimal()
library(tidyverse)
library(ggcorrplot)
library(ggplot2)
library(car)
library(mlbench)
library(patchwork)
library(knitr)
library(viridis)
library(unikn)
# 1. Correlations
correlations <- iris |>
select(where(is.numeric)) |>
cor(use = "complete.obs")
# Answer to question 1: The correlation between petal width and petal length is very strong and positive, close to 1. This makes sense to me, since petals tend to develop in a rounder shape and, the bigger they are, the greater both length and width tend to be. Sepal length shows a strong, positive correlation with both petal length and petal width. This indicates that larger flowers have longer sepals. However, sepal length and sepal width are negatively and weakly correlated. This could mean that, although larger flowers tend to have have longer sepals, they might in some cases not be as wide. The small magnitude of the effect, however, indicates that the relationship is not stable and there may be a large variance in the data. Finally, sepal width is negatively and moderately correlated with both petal length and petal width. The larger the petals are, the narrower their sepal. Although I don't know much about iris flowers' structure, the observed relationships between variables seem to make sense to me.
correlations |>
ggcorrplot() +
scale_color_viridis(option = "D")
ggcorrplot
# 2. Plot Sepal.Width against Sepal.Length
###my_pal <- seecol(pal_unikn_light)
plot1 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(shape = 18, color = "blue") +
geom_smooth(method = "lm", color = "darkred", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length")
plot1
# Answer to question 2: Since the correlation was very weak, we should expect the data to be widely scattered around the regression line. In this sense, the plotted points match the correlations we computed. However, it is also hard to visualize a linear negative relationship between sepal width and length. This indicates that, besides being weak, the effect is also unstable and unreliable, and doesn't apply to individual observations. Despite the overall negative correlation, the relationship between sepal width and length changes a lot for the different data points.
# 3. Fit a linear model using Sepal.Width as predictor and Sepal.Length as response
model1 <- iris |>
lm(formula = Sepal.Length ~ Sepal.Width)
summary(model1)
# Answer to question 3: The model indicates that, for every unit increase in sepal width, sepal length decreases by 0.22. However, the F-test didn't achieve statistical significance (p = 0.1519). That is, the hypothesis that there is not a linear relationship between these variables in the population (H0) can't be rejected. This matches what was seen in tasks 1 and 2. Task 1 showed a small negative correlation between the predictor and the outcome. Task 2 indicated that the relationship between these variables was unstable and that the variance in the data was high. In task 3, the linear model wasn't a good fit for the data. This indicates that, in fact, there is no linear relationship between sepal width and sepal length in the population.
# 4. Setosa correlations
setosa_data <- subset(iris, Species == "setosa")
correlations_setosa <- setosa_data |>
select(where(is.numeric)) |>
cor(use="complete.obs")
# Answer to question 4: All correlations between numeric variables, using only the setosas, are positive. When it comes to sepal length and width, these correlations are rather strong. It indicates that, for this species, longer sepals tend to be wider, which makes sense.
correlations_setosa |>
ggcorrplot()
# 5. Plot Sepal.Width against Sepal.Length, color by species
plot2 <- iris |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(mapping = aes(color = Species, shape = Species)) +
labs(
x = "Sepal Width",
y = "Sepal Length") +
theme_minimal()
plot2
plot3 <- setosa_data |>
ggplot(aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(color = "cyan4") +
geom_smooth(method = "lm", color = "brown2", se = FALSE) +
labs(
x = "Sepal Width",
y = "Sepal Length") +
theme_minimal()
plot3
# Answer to question 5: The plot matches the correlations computed for setosa flowers. For this category, specifically, it is possible to visualize a positive linear relationship between sepal width and length.
# 6. Fit second model using species and Sepal.Width as predictors and Sepal.Length as response
model2 <- iris |>
lm(formula = Sepal.Length ~ Sepal.Width + Species)
summary(model2)
# Answer to question 6: The estimated coefficient for sepal width indicates that, if sepal width increases by 1, sepal length rises by 0.80 unit, when the variable species is accounted for. It makes more sense than assuming that sepal width and length are negatively correlated, as the correlation matrix suggests, or that they aren't linearly related, as model 1 had shown. The model is greatly improved by adding species. In model 2, both sepal width and species significantly predict sepal length (p-values < .001), and the adjusted R-squared increased from 0.01 to 0.72. The interpretation changes in the sense that, within each species, we can see a linear relationship between sepal width and length.
# 7. Predict the sepal length of a setosa with a sepal width of 3.6 cm
prediction <- predict(
model2,
data.frame(
Species = "setosa",
Sepal.Width = 3.6))
prediction
# Answer to question 7: The prediction appears reasonable. When width is equal to 0, predicted length is 2.2514, as indicated by the intersection estimate. The estimated coefficient for sepal width, using setosa as a reference, is 0.8036. The prediction value, 5.1442 represents precisely an increase of 0.8036 in length for each centimeter added in width.
# 8. Load the Pima Indian diabetes .csv into R
diabetes_data <- read.csv("a2_diabetes.csv")
# 9. Find a good logistic regression model
# Exploring relationships
diabetes_correlations <- diabetes_data |>
cor(use = "complete.obs")
rounded_correlations <- round(diabetes_correlations, 2)
kable(rounded_correlations, format = "markdown", digits = 2)
diabetes_data |>
ggplot(aes(x = Outcome, y = Glucose)) +
geom_boxplot() +
labs(
x = "Diabetes",
y = "Glucose level")
diabetes_data |>
ggplot(aes(x = Outcome, y = Age)) +
geom_boxplot() +
labs(
x = "Diabetes",
y = "Age")
diabetes_data |>
ggplot(aes(x = Outcome, y = SkinThickness)) +
geom_boxplot() +
labs(
x = "Diabetes",
y = "SkinThickness")
diabetes_data |>
ggplot(aes(x = Glucose, y = Outcome)) +
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = FALSE) +
geom_point(aes(col = Outcome)) +
labs(
x = "Glucose level (mg/dl)",
y = "Probability of diabetes",
col = "Diabetes")
model3 <- glm(Outcome ~ Glucose, data = diabetes_data, family = "binomial")
summary(model3)
# Build a model using backward selection
## All predictors included
model_allpredictors <- diabetes_data |>
glm(formula = Outcome ~ ., family = "binomial")
model_allpredictors|> summary ()
vif(model_allpredictors)
###AIC = 243.82
## Remove blood pressure
model_allminus1 <- diabetes_data |>
glm(formula = Outcome ~ . - BloodPressure, family = "binomial")
model_allpredictors|> summary ()
vif(model_allminus1)
### AIC = 241.85
## Remove Insulin
model_allminus2 <- diabetes_data |>
glm(formula = Outcome ~ . - BloodPressure - Insulin, family = "binomial")
model_allminus2|> summary ()
vif(model_allminus2)
###AIC = 240.22
## Remove age
model_allminus3 <- diabetes_data |>
glm(formula = Outcome ~ . - BloodPressure - Insulin - Age, family = "binomial")
model_allminus3|> summary ()
vif(model_allminus3)
###AIC = 238.61
## Remove Diabetes Pedigree Function
model_allminus4 <- diabetes_data |>
glm(formula = Outcome ~ . - BloodPressure - Insulin - Age - DiabetesPedigreeFunction, family = "binomial")
model_allminus4|> summary ()
vif(model_allminus4)
### AIC = 237.91, BMI nonsignificant ***
## Remove BMI
model_allminus5 <- diabetes_data |>
glm(formula = Outcome ~ . - BloodPressure - Insulin - Age - DiabetesPedigreeFunction - BMI, family = "binomial")
model_allminus5|> summary ()
## AIC = 238.13
# Build a model using forward selection
## Diabetes
model_forward1 <- diabetes_data |>
glm(formula = Outcome ~ Glucose, family = "binomial")
model_forward1 |> summary ()
###AIC = 508.25
## Add age
model_forward2 <- diabetes_data |>
glm(formula = Outcome ~ Glucose + Age, family = "binomial")
model_forward2 |> summary ()
###AIC = 504.53
## Add skin thickness
model_forward3 <- diabetes_data |>
glm(formula = Outcome ~ Glucose + Age + SkinThickness, family = "binomial")
model_forward3 |> summary ()
###AIC = 329.08
## Add insulin
model_forward4 <- diabetes_data |>
glm(formula = Outcome ~ Glucose + Age + SkinThickness + Insulin, family = "binomial")
model_forward4 |> summary ()
###AIC = 241.03
## Add BMI
model_forward5 <- diabetes_data |>
glm(formula = Outcome ~ Glucose + Age + SkinThickness + Insulin + BMI, family = "binomial")
model_forward5 |> summary ()
###AIC = 240.97 ***
## Add pregnancy
model_forward6 <- diabetes_data |>
glm(formula = Outcome ~ Glucose + Age + SkinThickness + Insulin + BMI + Pregnancies, family = "binomial")
model_forward6 |> summary ()
###AIC = 241.1
# Final model
logistic_model <- diabetes_data |>
glm(formula = Outcome ~ . - BloodPressure - Insulin - Age - DiabetesPedigreeFunction - BMI, family = "binomial")
model_allminus4|> summary ()
# 10. Compute the accuracy
diabetes_data |>
mutate(predicted_prob = logistic_model |> predict(diabetes_data, type = "response")) |>
mutate(predicted_outcome = ifelse(predicted_prob > 0.5, 1, 0)) |>
filter(!is.na(predicted_outcome)) |>
summarize(accuracy = sum(predicted_outcome == Outcome) / n()) |>
pull()
accuracy <- 0.7729885
# Reflection on question 10: My intuition is that using the same data to fit the regression model and evaluate prediction accuracy might result in overestimated accuracy and lower generalizabity. Since the model was produced based on the data set, its fit to the data is optimized, and the prediction accuracy merely reproduces the relationship between variables within the observations. Even with a big and representative sample, we should expect random effects and measurement errors that could influence model fit and bias the model. In this sense, the test is not a real test, since it doesn't inform on the applicability of the model to a different set of data.
install.packages("pwr")
library(pwr)
pwr::pwr.f2.test(u = 3, f2 = .02, power = .80, sig.level = .05)
sqrt(0.02)
library(ggplot2)
library(plotly)
install.packages("plotly")
library(ggplot2)
library(plotly)
library(gapminder)
p <- gapminder %>%
filter(year==1977) %>%
ggplot( aes(gdpPercap, lifeExp, size = pop, color=continent)) +
geom_point() +
theme_bw()
ggplotly(p)
install.packages("htmlwidget")
instal.packages("webshot")
install.packages("webshot")
